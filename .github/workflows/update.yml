name: 'Update Version'
on:
  push:
    branches:
      - '_update-deps/runtimeverification/k'
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-deps:
    name: 'Update Dependecies'
    runs-on: ubuntu-24.04
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
      - name: 'Configure GitHub user'
        run: |
          git config user.name devops
          git config user.email devops@runtimeverification.com
      - name: 'Update uv release tag'
        id: uv_release
        run: |
          UV2NIX_VERSION=$(cat deps/uv2nix)
          UV_VERSION=$(curl -s https://raw.githubusercontent.com/pyproject-nix/uv2nix/$(cat deps/uv2nix)/pkgs/uv-bin/srcs.json | jq -r .version)
          [[ "$UV_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]
          echo $UV_VERSION > deps/uv_release
          git add deps/uv_release && git commit -m "Sync uv version: uv ${UV_VERSION}" || true
          echo uv_version=$UV_VERSION >> "${GITHUB_OUTPUT}"
      - name: 'Install Python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: 'Install uv'
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ steps.uv_release.outputs.uv_version }}
      - name: 'Update uv files'
        run: |
          K_VERSION=$(cat deps/k_release)
          sed -i 's!    "kframework==[0-9\.]*"!    "kframework=='${K_VERSION}'"!' pyproject.toml
          uv lock --upgrade
          git add pyproject.toml uv.lock && git commit -m "pyproject.toml: sync pyk version ${K_VERSION}" || true
      - name: 'Push updates'
        run: git push
